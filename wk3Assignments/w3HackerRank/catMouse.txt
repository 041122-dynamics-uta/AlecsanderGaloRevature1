using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the catAndMouse function below.
    static string catAndMouse(int x, int y, int z) {
        string xc = "Cat A";
        string yc = "Cat B";
        string zm = "Mouse C";
        int distA = Math.Abs(z-x); //Math.Abs is a method that gives us the absolute value of these expressions
        int distB = Math.Abs(z-y); //absolute of subtracting two variables on a line gives their distance,
                                    //so variables distA and distB are respective cat distances from the mouse

        if(distA > distB)   //the logic here reads if distance of Cat A > distance of Cat B, then return "Cat B"
        {                   //because, of course, cat B would be closer and "wins" here
            return yc;
        }
        else if(distA < distB) //same logic but reversed for Cat A
        {
            return xc;
        }
        else return zm; // the only other possible outcome is that distA == distB, so we return Mouse C here
        

    }


    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int q = Convert.ToInt32(Console.ReadLine());

        for (int qItr = 0; qItr < q; qItr++) {
            string[] xyz = Console.ReadLine().Split(' ');

            int x = Convert.ToInt32(xyz[0]);

            int y = Convert.ToInt32(xyz[1]);

            int z = Convert.ToInt32(xyz[2]);

            string result = catAndMouse(x, y, z);

            textWriter.WriteLine(result);
        }

        textWriter.Flush();
        textWriter.Close();
    }
}

